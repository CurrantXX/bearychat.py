#!/usr/bin/env python3

"""
gen_api
~~~~~~~

API spec generator::

    ./scripts/gen_api.py > bearychat/openapi/_api.py
"""

from datetime import datetime
import json
import urllib.request as request
import pprint


SCHEMA_URL = 'https://raw.githubusercontent.com/bearyinnovative/OpenAPI/master/api/swagger.json'  # noqa


resp = request.urlopen(SCHEMA_URL)
schema = json.loads(resp.read().decode('u8'))


def path_to_spec(path, path_spec):
    method, s = list(path_spec.items())[0]
    method_spec = {
        'method': method,
        'authentication': s.get('authentication', True),
    }

    ps = path.lstrip('/').split('.')
    assert len(ps) > 0
    if len(ps) == 1:
        api_method = ps[0]
        return {
            api_method: method_spec
        }
    if len(ps) == 2:
        service, api_method = ps[0], ps[1]
        return {
            service: {
                api_method: method_spec
            }
        }

    raise ValueError('unable to parse {0} {1}'.format(path, path_spec))


def deep_merge(d, s):
    for k, v in s.items():
        if isinstance(v, dict):
            n = d.setdefault(k, {})
            deep_merge(n, v)
        else:
            d[k] = v

    return d


rv = {}
for path, path_spec in schema['paths'].items():
    deep_merge(rv, path_to_spec(path, path_spec))


now = datetime.now().strftime('%Y/%m/%d %H:%M:%S')
print('# generated by scripts/gen_api.py at {}'.format(now))
print('apis = {}'.format(pprint.pformat(rv, indent=4, compact=True)))
